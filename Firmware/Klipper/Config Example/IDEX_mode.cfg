# This file contains a configuration snippet for a dual extruder
# printer using dual carriages (an "IDEX" printer).

# See docs/Config_Reference.md for a description of parameters.

# Definition for the primary carriage (holding the primary extruder)
# and the definition for the primary extruder in main config file


### !!! Do not use the [fan] section with the sample IDEX macros !!!
# [fan]
# pin: PH6

# T0 print cooling fan
[fan_generic fanX1]
pin: PE5
cycle_time: 0.0100
kick_start_time: 1.00
hardware_pwm: false

# T1 print  cooling fan
[fan_generic fanX2]
pin: PD12
cycle_time: 0.0100
kick_start_time: 1.000
hardware_pwm: false

########################################
# DUAL-CARRIAGES
########################################

[respond]

[gcode_macro DC_VARS]
# Offset coordinates for dual_carriage
variable_offset_x: 0
variable_offset_y: 1
variable_offset_z: 0
# Autopark tools on carriage switch: [0|1]
variable_autopark: 1
variable_movespeed: 300
variable_feedrate: 10000
# HeatBed size
variable_bed_x_min: 0
variable_bed_x_max: 377
# Print cooling fans names
variable_fan0: 'fanX1'
variable_fan1: 'fanX2'
# Extruders temp
variable_offset_temp: 0
gcode:

## DUAL-CARRIAGES : FULL_CONTROL - AUTO-PARK

[gcode_macro T0]
description: Activate T0 in "FULL_CONTROL" or "AUTO-PARK"
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if printer.dual_carriage is defined %}
        {% if printer.dual_carriage.active_carriage == "CARRIAGE_1" %}
            # z-hop
            {% set max_z = printer.toolhead.axis_maximum.z|float %}
            {% set cur_z = printer.toolhead.position.z|float %}
            {% set z_safe = 2.0 if cur_z < (max_z - 2.0) else (max_z - cur_z) %}
            M400
            {% if dcvars.autopark == 1 %}
                G91
                G1 Z{z_safe}
                G90
            # toggle carriage
                SAVE_GCODE_STATE NAME=toolhead_state
                _PARK_TOOL
            {% endif %}
            ACTIVATE_EXTRUDER EXTRUDER=extruder
            SET_DUAL_CARRIAGE CARRIAGE=0
            {% if dcvars.autopark == 1 %}
                RESTORE_GCODE_STATE NAME=toolhead_state MOVE=1 MOVE_SPEED={dcvars.movespeed}
            {% endif %}
            # offsets
            SET_GCODE_OFFSET X=0 Y=0 Z=0
            # print fan speed
            _SET_PRINT_FANS_SPEED
            # restore z
            {% if dcvars.autopark == 1 %}
                G91
                G1 Z-{z_safe}
                G90
            {% endif %}
        {% endif %}
    {% endif %}

[gcode_macro T1]
description: Activate T1 in "FULL_CONTROL" or "AUTO-PARK"
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if printer.dual_carriage is defined %}
        {% if printer.dual_carriage.active_carriage == "CARRIAGE_0" %}
            # z-hop
            {% set max_z = printer.toolhead.axis_maximum.z|float %}
            {% set cur_z = printer.toolhead.position.z|float %}
            {% set z_safe = 2.0 if cur_z < (max_z - 2.0) else (max_z - cur_z) %}
            M400
            {% if dcvars.autopark == 1 %}
                G91
                G1 Z{z_safe}
                G90
            # toggle carriage
                SAVE_GCODE_STATE NAME=toolhead_state
                _PARK_TOOL
            {% endif %}
            ACTIVATE_EXTRUDER EXTRUDER=extruder1
            SET_DUAL_CARRIAGE CARRIAGE=1
            {% if dcvars.autopark == 1 %}
                RESTORE_GCODE_STATE NAME=toolhead_state MOVE=1 MOVE_SPEED={dcvars.movespeed}
            {% endif %}
            # offsets
            SET_GCODE_OFFSET X={dcvars.offset_x} Y={dcvars.offset_y} Z={dcvars.offset_z}
            # print fan speed
            _SET_PRINT_FANS_SPEED
            # restore z
           {% if dcvars.autopark == 1 %}
                G91
                G1 Z-{z_safe}
                G90
            {% endif %}
        {% endif %}
    {% endif %}

[gcode_macro _PARK_TOOL]
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if printer.dual_carriage is defined %}
        SAVE_GCODE_STATE NAME=park_tool
        SET_GCODE_OFFSET X=0 Y=0 Z=0
        G90
        {% if printer.toolhead.extruder == 'extruder' %}
            G1 X{printer.configfile.config.stepper_x.position_endstop} F{dcvars.feedrate}
        {% elif (printer.toolhead.extruder) == 'extruder1' %}
            G1 X{printer.configfile.config.dual_carriage.position_endstop} F{dcvars.feedrate}
        {% else %}
            RESPOND TYPE=error MSG={ "Unknown extruder: %s".format(printer.toolhead.extruder) }
        {% endif %}
        RESTORE_GCODE_STATE NAME=park_tool
    {% endif %}
    
## DUAL-CARRIAGES : MODES ACTIVATION

[gcode_macro M605]
description: Set the dual-carriages mode
gcode:
    {% set mode = params.S|default(1)|int %}
    {% set offset_temp = params.R|default(0)|float %}
    {% if printer.dual_carriage is defined %}
        {% if (mode) == 0 %}
            SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=autopark VALUE=0
            MODE_FULL_CONTROL
        {% elif (mode) == 1 %}
            SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=autopark VALUE=1
            MODE_FULL_CONTROL
        {% elif (mode) == 2 and (params.X) is defined %}
            MODE_DUPLICATION X={params.X} R={offset_temp}
        {% elif (mode) == 2 %}
            MODE_DUPLICATION R={offset_temp}
        {% elif (mode) == 3 %}
            MODE_MIRRORED R={offset_temp}
        {% endif %}
        G1 F3000
    {% endif %}

[gcode_macro MODE_FULL_CONTROL]
description: Set the dual-carriages mode to "FULL_CONTROL"
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if printer.dual_carriage is defined %}
        SET_DUAL_CARRIAGE_MODE MODE=FULL_CONTROL
        G28 X
        SYNC_EXTRUDER_STEPPERS EXTRUDER=extruder1
        ACTIVATE_EXTRUDER EXTRUDER=extruder
        SET_GCODE_OFFSET X=0 Y=0 Z=0
        # set print fan speed
        _SET_PRINT_FANS_SPEED
    {% endif %}

[gcode_macro MODE_DUPLICATION]
description: Set the dual-carriages mode to "DUPLICATION"
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% set bed_x_mid = 0.5 * (dcvars.bed_x_max|float - dcvars.bed_x_min|float) %}
    {% set offset_temp = params.R|default(0)|float %}
    {% if printer.dual_carriage is defined %}
        # unsync both carriages
        SET_DUAL_CARRIAGE_MODE MODE=FULL_CONTROL
        G28 X
        SYNC_EXTRUDER_STEPPERS EXTRUDER=extruder1
        ACTIVATE_EXTRUDER EXTRUDER=extruder
        # place both carriages
        SET_DUAL_CARRIAGE CARRIAGE=1
        G1 X{params.X|default(bed_x_mid)|float} F{dcvars.feedrate}
        SET_DUAL_CARRIAGE CARRIAGE=0
        G1 X{dcvars.bed_x_min|float} F{dcvars.feedrate}
        # heaters management
        SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_temp VALUE={offset_temp}
        _SYNC_EXTRUDERS_TEMP
        # steppers management
        SYNC_EXTRUDER_STEPPERS EXTRUDER=extruder1 TO=extruder
        SET_DUAL_CARRIAGE_MODE MODE=DUPLICATION
        # print fans management
        _SET_PRINT_FANS_SPEED
    {% endif %}

[gcode_macro MODE_MIRRORED]
description: Set the dual-carriages mode to "MIRRORED"
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% set offset_temp = params.R|default(0)|float %}
    {% if printer.dual_carriage is defined %}
        # unsync both carriages
        SET_DUAL_CARRIAGE_MODE MODE=FULL_CONTROL
        G28 X
        SYNC_EXTRUDER_STEPPERS EXTRUDER=extruder1
        ACTIVATE_EXTRUDER EXTRUDER=extruder
        # place both carriages
         SET_DUAL_CARRIAGE CARRIAGE=1
        G1 X{dcvars.bed_x_max|float} F{dcvars.feedrate}
        SET_DUAL_CARRIAGE CARRIAGE=0
        G1 X{dcvars.bed_x_min|float} F{dcvars.feedrate}
        # heaters management
        SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=offset_temp VALUE={offset_temp}
        _SYNC_EXTRUDERS_TEMP
        # steppers management
        SYNC_EXTRUDER_STEPPERS EXTRUDER=extruder1 TO=extruder
        SET_DUAL_CARRIAGE_MODE MODE=MIRRORED
        # print fans management
        _SET_PRINT_FANS_SPEED
    {% endif %}
    
## DUAL-CARRIAGES : PRINT FANS MANAGEMENT

[gcode_macro M106]
description: Override "M106" to allow multiple extruders.
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% set raw_speed = params.S|default(0)|float %}
    {% set fan_speed = (raw_speed / 255.0)|round(2) %}
    {% if (params.P) is defined %}
        {% set P_fan = dcvars.fan0 if (params.P)|int == 0 else dcvars.fan1 %}
        SET_FAN_SPEED FAN={P_fan} SPEED={fan_speed}
    {% elif printer.dual_carriage is defined %}
        _SET_PRINT_FANS_SPEED SPEED={fan_speed}
    {% endif %}
    
[gcode_macro M107]
description: Override "M107" to allow multiple extruders.
gcode:
    M106 S0
    
[gcode_macro _SET_PRINT_FANS_SPEED]
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if params.SPEED is defined %}
        {% set fan_speed = params.SPEED|float %}
    {% else %}
        # read print fan speed from active extruder
        {% set fan0_speed = printer["fan_generic " + dcvars.fan0].speed|float %}
        {% set fan1_speed = printer["fan_generic " + dcvars.fan1].speed|float %}
        {% set fan_speed = [fan0_speed, fan1_speed]|max %}
    {% endif %}
    {% if printer.dual_carriage.active_carriage == "BOTH" %}
        SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
        SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
    {% elif printer.dual_carriage.active_carriage == "CARRIAGE_0" %}
        SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
        SET_FAN_SPEED FAN={dcvars.fan1} SPEED=0
    {% elif printer.dual_carriage.active_carriage == "CARRIAGE_1" %}
        SET_FAN_SPEED FAN={dcvars.fan0} SPEED=0
        SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
    {% endif %}

## DUAL-CARRIAGES : HEATERS MANAGEMENT
    
[gcode_macro M104]
rename_existing: M104.1
description: Override "M104" to allow multiple extruders to be synchronized.
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% set temp = params.S|default(0)|float %}
    {% set tool = params.T|default(0)|int %}
    {% if printer.dual_carriage.active_carriage|default() == "BOTH" %}
        {% if tool == 0 %}
            M104.1 T0 S{temp}
            M104.1 T1 S{temp + dcvars.offset_temp|float}
        {% endif %}
    {% else %}
        M104.1 T{tool} S{temp}
    {% endif %}
    
[gcode_macro M109]
rename_existing: M109.1
description: Override "M109" to allow multiple extruders to be synchronized.
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% set temp = params.S|default(0)|float %}
    {% set tool = params.T|default(0)|int %}
    {% if printer.dual_carriage.active_carriage|default() == "BOTH" %}
        {% if tool == 0 %}  
            M104.1 T1 S{temp + dcvars.offset_temp|float}
            M109.1 T0 S{temp}
            M109.1 T1 S{temp + dcvars.offset_temp|float}
        {% endif %}
    {% else %}
        M109.1 T{tool} S{temp}
    {% endif %}

[gcode_macro _SYNC_EXTRUDERS_TEMP]
gcode:
    {% set temp = printer["extruder"].target|float %}
    M109 S{temp}